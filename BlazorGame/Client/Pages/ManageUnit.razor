@page "/ManageUnit"


@inject IUnitService UnitService
@inject IStateService StateService

   @using BlazorGame.Shared.Models

<h3>Manage your Units</h3>

       <RadzenCard>
            <h4 class="mb-4">Hire a hero</h4>
            <div class="row">

                <div class="col-7"> <RadzenDropDownDataGrid TValue="int" AllowClear="true" 
                                        Data=@(unitTypeList) Style="width: 90%" AllowColumnResize="true"
                                        TextProperty="Title" ValueProperty="Id" AllowFiltering= "false"
                                        Change=@(args => OnChange(args))>
                                        <Template>
                                                  Type: @((context as Unit).Title) , Cost : @((context as Unit).Cost)
                                        </Template>
                                    </RadzenDropDownDataGrid>
                                    </div>
                <div class="col-3">     <RadzenButton Icon="check_circle"  Click=@(args => OnClick(@UnitSelected)) ButtonStyle="ButtonStyle.Success" />Hire</div>
            </div>

           
        </RadzenCard>
@if (MyUnits != null)
{
    foreach (var u in MyUnits)
    {
        <div class="col-lg-6 col-xl-4 offset-lg-3 offset-xl-4">

         <RadzenCard class="m-3">
                <h3 class="h5 unit-title">@u.Title.ToUpper()</h3>
                <div class="d-flex flex-row">
                    <RadzenImage Path=@($"img/{u.Title}.jpg") Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;" />
                    <div>
                         <div><span>HP :  </span>@u.HitPoint</div>
                         <div><span>Defense :  </span>@u.Defense</div>
                          <div><span>Attack :  </span>@u.Attack</div>                    
                           <div><span>Return Point :  </span>@u.ReturnPoint</div>
                    </div>
                </div>
            </RadzenCard>
            </div>
}
}
@code {
    public IList<Unit> unitTypeList;
    public IList<Unit> MyUnits;
    public int UnitSelected;
    protected override void OnInitialized()
    {

        unitTypeList = UnitService.GetUnitType();
        UnitSelected = unitTypeList.First().Id;
    }

    void OnChange(object value)
    {
        UnitSelected = (int)value;

    }
    void OnClick(int selectedId)
    {

        //get cost of selected unit
        var cost = unitTypeList.Where(u => u.Id == selectedId).First().Cost;


        UnitService.AddUnit(selectedId);
        StateService.UseCoin(cost);
        MyUnits =  UnitService.GetMyUnit();
        StateHasChanged();

    }
}
