@page "/"
@using Newtonsoft.Json
@inject HttpClient Http
@inject IDevRecordService DevRecordService


<PageTitle>Index</PageTitle>

<h1>Hello, Blazor!</h1>

<p>I remembered that I was addicted to kind of MUD games a lo..ng time ago, so I am going to find something to do for fun in my spare time.

I will integrate my knowledge of Blazor and make myself a Blazor Fight GAME!!!!

How ambitious that sounds, yeah, yeah, yeah, mon coeur est vast...</p>

<p>I would use Blazor WASM, Asp.net core hosted,add as much knowledge as I can think of....</p>

<p>

:) Just for fun, and I don't know how far I can go for this project, haha, summer is outside, and I want to go on vacation too!
</p>

UI Component :  <a target="_blank" class="font-weight-bold link-dark" href="https://blazor.radzen.com/">Radzen UI </a>

Some ideas came from  <a target="_blank" class="font-weight-bold link-dark" href=" https://www.youtube.com/watch?v=In7YSYisMh4&ab_channel=PatrickGod">Make a Browser Game with Blazor WebAssembly</a>

<h1>Happy every day!</h1>

@if (infos != null)
{
    @foreach (LogInfo item in infos.logs.Reverse<LogInfo>())
    {
        int count = item.Messages.Count();
        <div class="alert alert-secondary mt-4">
            <span class="oi oi-pencil me-2" aria-hidden="true"></span>
            <strong>@item.DateLog</strong>

            <span class="text-nowrap">
                @item.Summary
            </span>
            <ShowLogInfo msgs="@item.Messages"></ShowLogInfo>
        </div>
    }
}
<div class="alert alert-secondary mt-4">
    <span class="oi oi-pencil me-2" aria-hidden="true"></span>
    <strong>XXX,July,2022</strong>

    <span class="text-nowrap">
  To Be Continued!

    </span>

</div>
<SurveyPrompt Title="How is Blazor working for you?" />

@code{


    private Root? infos { get; set; }

    protected override async Task OnInitializedAsync() => infos = await Http.GetFromJsonAsync<Root>("txt/LogIndex.json");


}
