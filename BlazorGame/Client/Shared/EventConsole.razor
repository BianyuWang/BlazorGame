@using System.Text.Json
@inject IJSRuntime JSRuntime

<RadzenCard @attributes=@Attributes>
    <div class="console">
    <div class="console-header align-items-center">
        <h3 class="console-title">Battle log</h3>
        <button class="console-clear" @onclick=@OnClearClick>Clear</button>
    </div>
    <div class="console-content" id="event-console">
    @foreach(var message in messages)
    {
        <div class="console-message">
            <span class="console-message-time">@message.Date.ToString("HH:mm:ss.ff")</span>
            <span class="console-message-text">@message.Text</span>
        </div>
    }
    </div>
    </div>
</RadzenCard>

@code {
    class Message
    {
        public DateTime Date { get; set; }
        public string Text { get; set; }
    }

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> Attributes { get; set; }
    IList<Message> messages = new List<Message>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

      
        if (!firstRender)
        {

            await JSRuntime.InvokeVoidAsync("eval", $"document.getElementById('event-console').scrollTop = document.getElementById('event-console').scrollHeight");
        }
        else
        {  Message firstMSG = new Message();
        firstMSG.Date = DateTime.Now;
        firstMSG.Text = "The enemy has regrouped,Please Choose a Hero to beging battle";
        messages.Add(firstMSG);
         InvokeAsync(StateHasChanged);
        }
    }

    void OnClearClick()
    {
        Clear();
    }

    public void Clear()
    {
        messages.Clear();

        InvokeAsync(StateHasChanged);
    }

    public void Log(string message)
    {
        messages.Add(new Message { Date = DateTime.Now, Text = message });

        InvokeAsync(StateHasChanged);
    }

    public void Log(object value)
    {
        Log(JsonSerializer.Serialize(value));
    }
}

        <style>

            
.console {
    height: 400px;
    margin: 16px 0;
    border: 1px solid rgba(0,0,0,0.1);
    border-radius: 4px;
    display: flex;
    flex-direction: column;
    padding: 0 0 16px 0;
}

.console-content {
    flex: 1;
    overflow: auto;
}

.console-header {
    display: flex;
    border-bottom: 1px solid rgba(0,0,0,0.1);
    padding: 16px;
}

.console-title {
    flex: 1;
    text-align: left;
    font-size: 18px;
    font-weight: 600;
}

.console-clear {
    appearance: none;
    border: none;
    outline: none !important;
    background: transparent;
}

.console-message {
    margin: 8px;
    padding: 4px 0;
    display: flex;
    align-items: baseline;
    color: #000000;
    background: rgba(210,233,255,0.8);
    border-radius: 4px;
}

.console-message-time {
    font-size: 12px;
    padding: 2px 4px;
}


        </style>